name: Continuous Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Obtain short SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7
      - name: Push Docker image
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}
        run: |
          docker login --username=${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
          docker build . -t ${{ secrets.REGISTRY }}:$SHA
          docker push ${{ secrets.REGISTRY }}:$SHA
          docker tag $(docker images ${{ secrets.REGISTRY }}:$SHA -q) ${{ secrets.REGISTRY }}:latest
          docker push ${{ secrets.REGISTRY }}:latest
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker stop $(docker ps --filter ancestor=${{ secrets.REGISTRY }} -q)
            docker rm -f $(docker ps -a --filter ancestor=${{ secrets.REGISTRY }}:latest -q)
            docker tag ${{ secrets.REGISTRY }}:latest ${{ secrets.REGISTRY }}:last
            docker rmi ${{ secrets.REGISTRY }}:latest
            docker login --username=${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
            docker pull ${{ secrets.REGISTRY }}:latest
            docker rmi -f $(docker images ${{ secrets.REGISTRY }}:last -q)
            docker run --detach \
                --restart=unless-stopped \
                --name MTurkManagement \
                --publish 8006:8000 \
                --env MONGO_HOST=davidz.cn:27017 \
                --env MONGO_USER=david \
                --env MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
                --env POSTGRESQL_USER=postgres \
                --env POSTGRESQL_PASSWORD=${{ secrets.POSTGRESQL_PASSWORD }} \
                --env POSTGRESQL_HOST=${{ secrets.HOST }} \
                --env POSTGRESQL_PORT=5432 \
                --volume /docker/IkeaAssemblyInstructionDataset/dataset:/MTurkManagement/dataset \
                ${{ secrets.REGISTRY }}:latest
            docker cp MTurkManagement:/MTurkManagement/static /docker/MTurkManagement/static
            docker exec MTurkManagement /bin/bash -c 'cd /MTurkManagement && python manage.py migrate'
